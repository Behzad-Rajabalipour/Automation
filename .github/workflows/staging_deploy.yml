name: "Terraform and Ansible Workflow"

on:
  push:
    branches:
      - prod
    paths:
      - Terraform/**

  pull_request:
    branches:
      - prod
    paths:
      - Terraform/**

permissions:
  contents: read
  pull-requests: write

jobs:
  # terraform:
  #   name: "Terraform - Network and Webserver"
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.1.9
  #         terraform_wrapper: true

  #     # --- Network Infrastructure ---
  #     - name: Terraform Format (Network)
  #       id: fmt-network
  #       run: terraform fmt
  #       working-directory: ./Terraform/prod/Network
  #       continue-on-error: true

  #     - name: Terraform Init (Network)
  #       id: init-network
  #       run: terraform init
  #       working-directory: ./Terraform/prod/Network

  #     - name: Terraform Validate (Network)
  #       id: validate-network
  #       run: terraform validate -no-color
  #       working-directory: ./Terraform/prod/Network

  #     - name: Terraform Plan (Network)
  #       id: plan-network
  #       run: terraform plan -input=false -no-color -out=tf.plan
  #       working-directory: ./Terraform/prod/Network

  #     - name: Terraform Apply (Network)
  #       id: apply-network
  #       run: terraform apply -input=false tf.plan
  #       working-directory: ./Terraform/prod/Network

  #     # --- Webserver Infrastructure ---
  #     - name: Terraform Format (Webserver)
  #       id: fmt-webserver
  #       run: terraform fmt
  #       working-directory: ./Terraform/prod/Webserver
  #       continue-on-error: true

  #     - name: Terraform Init (Webserver)
  #       id: init-webserver
  #       run: terraform init
  #       working-directory: ./Terraform/prod/Webserver

  #     - name: Terraform Validate (Webserver)
  #       id: validate-webserver
  #       run: terraform validate -no-color
  #       working-directory: ./Terraform/prod/Webserver

  #     - name: Terraform Plan (Webserver)
  #       id: plan-webserver
  #       run: terraform plan -input=false -no-color -out=tf.plan
  #       working-directory: ./Terraform/prod/Webserver

  #     - name: Terraform Apply (Webserver)
  #       id: apply-webserver
  #       run: terraform apply -input=false tf.plan
  #       working-directory: ./Terraform/prod/Webserver

  ansible:
    name: "Ansible - Deploy"
    runs-on: ubuntu-latest
    # needs: terraform
    environment: staging
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python (for Ansible)
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.8"

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible==2.9

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ./ansible/inventories/aws_ec2.yaml ./ansible/playbook_jinja2.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
